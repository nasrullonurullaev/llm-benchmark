name: Run vLLM Benchmark

on:
  workflow_dispatch:
    inputs:
      model:
        description: "Model to benchmark"
        required: true
        default: "neuralmagic/Meta-Llama-3.1-8B-Instruct-FP8"
      num_prompts:
        description: "Number of prompts"
        required: false
        default: "20"

jobs:
  benchmark:
    name: Run vLLM Benchmark
    runs-on: ubuntu-latest
    env:
      GPU_TYPE: "NVIDIA RTX 2000 Ada Generation"
      IMAGE_NAME: "vllm/vllm-openai:latest"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install RunPod CLI
        run: wget -qO- cli.runpod.net | sudo bash

      - name: Configure RunPod CLI
        run: runpodctl config --apiKey ${{ secrets.API_KEY }}
        continue-on-error: true

      - name: Create RunPod Instance
        run: |
          CREATE_OUTPUT=$(runpodctl create pod \
            --ports "8000/tcp" \
            --secureCloud \
            --gpuType "$GPU_TYPE" \
            --imageName "$IMAGE_NAME" \
            --args "--model ${{ inputs.model }} --max-model-len 4096 --port 8000 --enforce-eager --gpu-memory-utilization 0.95")
          POD_ID=$(echo "$CREATE_OUTPUT" | awk -F'"' '/pod "/ {print $2}')
          echo "POD_ID=$POD_ID" >> $GITHUB_ENV

      - name: Wait for RunPod Instance
        run: sleep 100

      - name: Retrieve RunPod Endpoint
        run: |
          ENDPOINT=$(echo "$(runpodctl get pod $POD_ID -a)" | grep -oP '\d+\.\d+\.\d+\.\d+:\d+(?=->8000)')
          echo "ENDPOINT=$ENDPOINT" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Clone and Build vLLM
        run: |
          git clone https://github.com/vllm-project/vllm
          cd vllm
          VLLM_USE_PRECOMPILED=1 pip install --editable .

      - name: Install Benchmark Dependencies
        run: pip install pandas datasets pynvml

      - name: Run vLLM Benchmark
        run: |
          cd vllm/benchmarks
          python3 benchmark_serving.py --backend openai \
              --base-url "http://$ENDPOINT" \
              --dataset-name=random \
              --model "${{ inputs.model }}" \
              --result-filename "benchmark_result.json" \
              --save-result \
              --num-prompts ${{ inputs.num_prompts }} \
              --seed 12345 | tee benchmark_output.log

      - name: Generate Benchmark Summary
        run: |
          echo "## vLLM Benchmark Result" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          grep -A 20 "============ Serving Benchmark Result" vllm/benchmarks/benchmark_output.log >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: Upload Benchmark Results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: vllm/benchmarks/benchmark_result.json

      - name: Remove RunPod Pod
        if: always()
        run: runpodctl remove pod $POD_ID
